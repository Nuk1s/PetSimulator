local LeaderBoards = workspace:WaitForChild("Leaderboard")
local TotalCoins = LeaderBoards:WaitForChild("Coins")
local TotalRebirths = LeaderBoards:WaitForChild("Rebirths")
local Assets = game.ReplicatedStorage:WaitForChild("Settings")
local DataStore = game:GetService("DataStoreService")
local Templates = game:GetService("ReplicatedStorage"):WaitForChild("Settings"):WaitForChild("TemplateLB")

local ProfileService = require(game.ReplicatedStorage.Modules:WaitForChild("ProfileData"))

local CoinData = DataStore:GetOrderedDataStore("Coins[1]")
local TimeData = DataStore:GetOrderedDataStore("Rebirths[1]")

local TFM = require(game:GetService("ReplicatedStorage"):WaitForChild("Modules"):WaitForChild("TFM"))

local TopAmout = 100
local TimeUpdate = 120

local module = {}

local suffixes = {'','K','M','B','T','qd','Qn','x','Sp','O','N','de','Ud','DD','tdD','qdD','QnD','sxD','SpD','OcD','NvD','Vgn','UVg','DVg','TVg','qtV','QnV','SeV','SPG','OVG','NVG','TGN','UTG','DTG','tsTG','qtTG','QnTG','ssTG','SpTG','OcTG','NoAG','UnAG','DuAG','TeAG','QdAG','QnAG','SxAG','SpAG','OcAG','NvAG','CT'}

local function format(val)
	for i=1, #suffixes do
		if tonumber(val) < 10^(i*3) then
			return math.floor(val/((10^((i-1)*3))/100))/(100)..suffixes[i]
		end
	end
end

local function UpdateCoin()
	local Success, Err = pcall(function()
		local Data = CoinData:GetSortedAsync(false, TopAmout)
		local CoinPage = Data:GetCurrentPage()
		for Rank, Data in ipairs(CoinPage) do
			if tonumber(Data.key) > 0 then
				local Id = Data.key
				local Name = game.Players:GetNameFromUserIdAsync(Id)
				local Value = Data.value
				local Template = Templates:WaitForChild("Template")
				local NewObj = Template:Clone()
				NewObj.Player.Text = Name
				NewObj.Amount.Text = format(Value)
				NewObj.Number.Text = "#"..Rank
				NewObj.ImageLabel.Image = "rbxassetid://13624929013"
				NewObj.ZIndex = Rank
				NewObj.Parent = TotalCoins:WaitForChild("Main").SurfaceGui.Frame
				NewObj.Name = Rank
				NewObj.Visible = true
			end
		end
	end)
	if not Success then
		error(Err)
	end
end

local function UpdateTimer()
	local Success, Err = pcall(function()
		local Data = TimeData:GetSortedAsync(false, TopAmout)
		local CoinPage = Data:GetCurrentPage()
		for Rank, Data in ipairs(CoinPage) do
			if tonumber(Data.key) > 0 then
				local Id = Data.key
				local Name = game.Players:GetNameFromUserIdAsync(Id)
				local Value = Data.value
				local Template = Templates:WaitForChild("Template")
				local NewObj = Template:Clone()
				NewObj.Player.Text = Name
				NewObj.Amount.Text = format(Value)
				NewObj.Number.Text = "#"..Rank
				NewObj.ImageLabel.Image = "rbxassetid://13624920946"
				NewObj.ZIndex = Rank
				NewObj.Parent = TotalRebirths:WaitForChild("Main").SurfaceGui.Frame
				NewObj.Name = Rank
				NewObj.Visible = true
			end
		end
	end)
	if not Success then
		error(Err)
	end
end




while task.wait() do
	task.wait(1)
	UpdateCoin()
	UpdateTimer()
	task.wait(TimeUpdate)
	for _,plr in pairs(game.Players:GetPlayers()) do
		if plr ~= nil then
			local profile = ProfileService[plr]
			if profile then
				wait(0.05)
				CoinData:SetAsync(plr.UserId, math.floor(profile.Data.TotalCoins))
				TimeData:SetAsync(plr.UserId, profile.Data.Rebirths)
			end
		end
	end
	for _,v in pairs(TotalCoins:WaitForChild("Main").SurfaceGui.Frame:GetChildren()) do
		if v:IsA("Frame") then
			v:Destroy()
		end
	end
	for _,v in pairs(TotalRebirths:WaitForChild("Main").SurfaceGui.Frame:GetChildren()) do
		if v:IsA("Frame") then
			v:Destroy()
		end
	end
end
